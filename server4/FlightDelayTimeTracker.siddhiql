/* Enter a unique ExecutionPlan */
@Plan:name('FlightDelayTimeTracker')

/* Enter a unique description for ExecutionPlan */
-- @Plan:description('ExecutionPlan')

/* define streams/tables and write queries here ... */

@Plan:trace('false')

@Import('delayed.event.stream:1.0.0')
define stream delayedFlightInput (flight_number int, delayed_time long);

@Export('delayed.maintenance.stream:1.0.0')
define stream delayedAdjacentMaintenanceEvent (flight_name string, time_from int, time_to int, delayed_time long);

@Export('delayed.flight.stream:1.0.0')
define stream delayedFlight (delayed_time long, flight_number int, flight_name string, time_from int, time_to int);

define trigger startTrigger at 'start';

@From(eventtable='rdbms', datasource.name='SOUTHWEST_AIRLINES_DB', table.name='FLIGHTS_SCHEDULE_TABLE')
define table flightScheduleTableRDBMS (flight_name string, flight_number int, flight_from string, flight_to string, time_from int, time_to int);

@From(eventtable='rdbms', datasource.name='SOUTHWEST_AIRLINES_DB', table.name='MAINTENANCE_SCHEDULE_TABLE')
define table maintenanceScheduleTableRDBMS (flight_name string, airport_name string, hanger_number int, time_from int, time_to int);

define table flightScheduleTable (flight_name string, flight_number int, flight_from string, flight_to string, time_from int, time_to int);
define table maintenanceScheduleTable (flight_name string, airport_name string, hanger_number int, time_from int, time_to int);


from startTrigger join flightScheduleTableRDBMS
select flight_name, flight_number, flight_from, flight_to, time_from, time_to
insert into flightScheduleRdbmsStream;

from startTrigger join maintenanceScheduleTableRDBMS
select flight_name, airport_name, hanger_number, time_from, time_to
insert into maintenanceScheduleRdbmsStream;

from flightScheduleRdbmsStream
insert into flightScheduleTable;

from maintenanceScheduleRdbmsStream
insert into maintenanceScheduleTable;

@info(name = 'generate_delayed_flight')
from delayedFlightInput join flightScheduleTable
	on flightScheduleTable.flight_number == flight_number
select
	delayedFlightInput.delayed_time,
	flightScheduleTable.flight_number,
	flightScheduleTable.flight_name, 
	flightScheduleTable.time_from,
	flightScheduleTable.time_to
insert into delayedFlight;

@info(name = 'checking_for_empty_slot_in_flight')
from delayedFlight left outer join flightScheduleTable
	on flightScheduleTable.flight_name == flight_name 
		and flightScheduleTable.time_from == time_to
select
	flightScheduleTable.flight_name
insert into emptySlotInFlight;

@info(name = 'checking_for_empty_slot_in_maintenance')
from delayedFlight left outer join maintenanceScheduleTable
	on maintenanceScheduleTable.flight_name == flight_name 
		and maintenanceScheduleTable.time_from == time_to
select
	maintenanceScheduleTable.flight_name
insert into emptySlotInMaintenance;


@info(name = 'generate_delayed_adjacent_flight')
from delayedFlight join flightScheduleTable
	on flightScheduleTable.flight_name == flight_name
		and flightScheduleTable.time_from == time_to
select
	delayedFlight.delayed_time,
	flightScheduleTable.flight_number,
	flightScheduleTable.flight_name, 
	flightScheduleTable.time_from,
	flightScheduleTable.time_to
insert into delayedAdjacentFlight;

@info(name = 'generate_delayed_adjacent_maintenanceEvent')
from delayedFlight join maintenanceScheduleTable
	on maintenanceScheduleTable.flight_name == flight_name
		and maintenanceScheduleTable.time_from == time_to
select
	maintenanceScheduleTable.flight_name,
	maintenanceScheduleTable.time_from,
	maintenanceScheduleTable.time_to,
	delayed_time
insert into delayedAdjacentMaintenanceEvent;

@info(name = 'generate_delayed_adjacent_flight_for_maintance_event')
from delayedAdjacentMaintenanceEvent join flightScheduleTable
	on flightScheduleTable.flight_name == flight_name
		and flightScheduleTable.time_from == time_to
select
	delayedAdjacentMaintenanceEvent.delayed_time,
	flightScheduleTable.flight_number,
	flightScheduleTable.flight_name, 
	flightScheduleTable.time_from,
	flightScheduleTable.time_to
insert into delayedAdjacentFlight;

@info(name = 'regenerate_delayed_event_using_maintance_event')
from delayedAdjacentMaintenanceEvent join maintenanceScheduleTable
	on maintenanceScheduleTable.flight_name == flight_name
		and maintenanceScheduleTable.time_from == time_to
select
	maintenanceScheduleTable.flight_name,
	maintenanceScheduleTable.time_from,
	maintenanceScheduleTable.time_to,
	delayed_time
insert into delayedAdjacentMaintenanceEvent;

@info(name = 'regenerate_delayed_event_using_flight_event')
from delayedAdjacentFlight
insert into delayedFlight;